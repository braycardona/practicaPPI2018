<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.colsevi.dao.caja.map.CajaMapper">
  <resultMap id="BaseResultMap" type="com.colsevi.dao.caja.model.Caja">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 11 22:38:27 COT 2017.
    -->
    <id column="id_caja" jdbcType="INTEGER" property="id_caja" />
    <result column="id_establecimiento" jdbcType="INTEGER" property="id_establecimiento" />
    <result column="id_persona" jdbcType="INTEGER" property="id_persona" />
    <result column="fecha_ejecucion" jdbcType="DATE" property="fecha_ejecucion" />
    <result column="estado" jdbcType="VARCHAR" property="estado" />
    <result column="valor_inicial" jdbcType="DECIMAL" property="valor_inicial" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 11 22:38:27 COT 2017.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 11 22:38:27 COT 2017.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 11 22:38:27 COT 2017.
    -->
    id_caja, id_establecimiento, id_persona, fecha_ejecucion, estado, valor_inicial
  </sql>
  <select id="selectByExample" parameterType="com.colsevi.dao.caja.model.CajaExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 11 22:38:27 COT 2017.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from caja
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      LIMIT ${limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 11 22:38:27 COT 2017.
    -->
    select 
    <include refid="Base_Column_List" />
    from caja
    where id_caja = #{id_caja,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 11 22:38:27 COT 2017.
    -->
    delete from caja
    where id_caja = #{id_caja,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.colsevi.dao.caja.model.CajaExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 11 22:38:27 COT 2017.
    -->
    delete from caja
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.colsevi.dao.caja.model.Caja">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 11 22:38:27 COT 2017.
    -->
    insert into caja (id_caja, id_establecimiento, id_persona, 
      fecha_ejecucion, estado, valor_inicial
      )
    values (#{id_caja,jdbcType=INTEGER}, #{id_establecimiento,jdbcType=INTEGER}, #{id_persona,jdbcType=INTEGER}, 
      #{fecha_ejecucion,jdbcType=DATE}, #{estado,jdbcType=VARCHAR}, #{valor_inicial,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.colsevi.dao.caja.model.Caja">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 11 22:38:27 COT 2017.
    -->
    insert into caja
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id_caja != null">
        id_caja,
      </if>
      <if test="id_establecimiento != null">
        id_establecimiento,
      </if>
      <if test="id_persona != null">
        id_persona,
      </if>
      <if test="fecha_ejecucion != null">
        fecha_ejecucion,
      </if>
      <if test="estado != null">
        estado,
      </if>
      <if test="valor_inicial != null">
        valor_inicial,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id_caja != null">
        #{id_caja,jdbcType=INTEGER},
      </if>
      <if test="id_establecimiento != null">
        #{id_establecimiento,jdbcType=INTEGER},
      </if>
      <if test="id_persona != null">
        #{id_persona,jdbcType=INTEGER},
      </if>
      <if test="fecha_ejecucion != null">
        #{fecha_ejecucion,jdbcType=DATE},
      </if>
      <if test="estado != null">
        #{estado,jdbcType=VARCHAR},
      </if>
      <if test="valor_inicial != null">
        #{valor_inicial,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.colsevi.dao.caja.model.CajaExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 11 22:38:27 COT 2017.
    -->
    select count(*) from caja
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 11 22:38:27 COT 2017.
    -->
    update caja
    <set>
      <if test="record.id_caja != null">
        id_caja = #{record.id_caja,jdbcType=INTEGER},
      </if>
      <if test="record.id_establecimiento != null">
        id_establecimiento = #{record.id_establecimiento,jdbcType=INTEGER},
      </if>
      <if test="record.id_persona != null">
        id_persona = #{record.id_persona,jdbcType=INTEGER},
      </if>
      <if test="record.fecha_ejecucion != null">
        fecha_ejecucion = #{record.fecha_ejecucion,jdbcType=DATE},
      </if>
      <if test="record.estado != null">
        estado = #{record.estado,jdbcType=VARCHAR},
      </if>
      <if test="record.valor_inicial != null">
        valor_inicial = #{record.valor_inicial,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 11 22:38:27 COT 2017.
    -->
    update caja
    set id_caja = #{record.id_caja,jdbcType=INTEGER},
      id_establecimiento = #{record.id_establecimiento,jdbcType=INTEGER},
      id_persona = #{record.id_persona,jdbcType=INTEGER},
      fecha_ejecucion = #{record.fecha_ejecucion,jdbcType=DATE},
      estado = #{record.estado,jdbcType=VARCHAR},
      valor_inicial = #{record.valor_inicial,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.colsevi.dao.caja.model.Caja">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 11 22:38:27 COT 2017.
    -->
    update caja
    <set>
      <if test="id_establecimiento != null">
        id_establecimiento = #{id_establecimiento,jdbcType=INTEGER},
      </if>
      <if test="id_persona != null">
        id_persona = #{id_persona,jdbcType=INTEGER},
      </if>
      <if test="fecha_ejecucion != null">
        fecha_ejecucion = #{fecha_ejecucion,jdbcType=DATE},
      </if>
      <if test="estado != null">
        estado = #{estado,jdbcType=VARCHAR},
      </if>
      <if test="valor_inicial != null">
        valor_inicial = #{valor_inicial,jdbcType=DECIMAL},
      </if>
    </set>
    where id_caja = #{id_caja,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.colsevi.dao.caja.model.Caja">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 11 22:38:27 COT 2017.
    -->
    update caja
    set id_establecimiento = #{id_establecimiento,jdbcType=INTEGER},
      id_persona = #{id_persona,jdbcType=INTEGER},
      fecha_ejecucion = #{fecha_ejecucion,jdbcType=DATE},
      estado = #{estado,jdbcType=VARCHAR},
      valor_inicial = #{valor_inicial,jdbcType=DECIMAL}
    where id_caja = #{id_caja,jdbcType=INTEGER}
  </update>
  
	<insert id="CONSOLIDAR_PAGOS_PROVEEDOR" parameterType="java.util.Map">  
		INSERT INTO pago_proveedor (id_compra, fecha_pago, valor_pagado, observacion)
		SELECT id_compra_proveedor AS id_compra, NOW() AS fecha_pago, valor AS valor_pagado, 
		'Pago por consolidación' AS observacion
		FROM compra_proveedor CP
		INNER JOIN caja C ON id_caja = #{cajaFiltro} AND CP.id_establecimiento = C.id_establecimiento
		WHERE 1 = 1 AND (motivo IS null OR motivo = '') AND CP.fecha_compra like CONCAT(C.fecha_ejecucion,'%') 
		AND pendiente != 0 AND pagado = true;
	</insert>  
	
	<update id="CONSOLIDAR_COMPRAS_PROVEEDOR" parameterType="java.util.Map">
		UPDATE compra_proveedor CP
		JOIN caja C
		ON C.id_caja = #{cajaFiltro} AND CP.id_establecimiento = C.id_establecimiento
		SET CP.pendiente = 0
		WHERE 1 = 1 AND (motivo IS null OR motivo = '') AND CP.fecha_compra like CONCAT(C.fecha_ejecucion,'%') 
		AND pendiente != 0 AND pagado = true;
    </update>
    
    <select id="LISTA_COMPRAS_CAJA" parameterType="java.util.Map" resultType="java.util.HashMap">
		-- compras 
		SELECT COUNT(id_compra_proveedor) AS cantidad, SUM(valor) AS valor, CP.id_establecimiento AS establecimiento, 'Todas las Compras' AS Tipo 
		FROM compra_proveedor CP
		INNER JOIN caja C ON id_caja = #{cajaFiltro} AND CP.id_establecimiento = C.id_establecimiento
		WHERE 1 = 1 AND (motivo IS null OR motivo = '') AND CP.fecha_compra like CONCAT(C.fecha_ejecucion,'%')
		UNION
		-- compras pendientes por pagar
		SELECT count(id_compra_proveedor) as cantidad, SUM(pendiente) AS valor, C.id_establecimiento AS establecimiento, 'Compras por Pagar' AS Tipo
		FROM compra_proveedor CP
		INNER JOIN caja C ON id_caja = #{cajaFiltro} AND CP.id_establecimiento = C.id_establecimiento
		WHERE 1 = 1 AND (motivo IS null OR motivo = '') AND CP.fecha_compra like CONCAT(C.fecha_ejecucion,'%') AND pendiente != 0
		UNION
		-- compras pagadas
		SELECT count(id_compra_proveedor) as cantidad, SUM(valor) AS valor, C.id_establecimiento AS establecimiento, 'Compras Pagadas' AS Tipo
		FROM compra_proveedor CP
		INNER JOIN caja C ON id_caja = #{cajaFiltro} AND CP.id_establecimiento = C.id_establecimiento
		WHERE 1 = 1 AND (motivo IS null OR motivo = '') AND CP.fecha_compra like CONCAT(C.fecha_ejecucion,'%') AND pendiente = 0
		UNION
        -- compras antiguas pendientes por pagar con pagos en este cierre de caja
		SELECT COUNT(id_compra_proveedor) as cantidad, SUM(valor_pagado) AS valorPagado, C.id_establecimiento AS establecimiento,
		'Compras con deudas que tienen pagos en este cierre de caja' AS Tipo 
		FROM pago_proveedor PP
		INNER JOIN caja C ON id_caja = #{cajaFiltro} AND PP.fecha_pago like CONCAT(C.fecha_ejecucion,'%')
		INNER JOIN compra_proveedor CP ON CP.id_establecimiento = C.id_establecimiento AND (motivo IS null OR motivo = '')
		WHERE PP.id_compra = CP.id_compra_proveedor AND DATE(CP.fecha_compra) != DATE(PP.fecha_pago);

	</select>
	
	<select id="LISTA_COMPRAS_ANTIGUAS_PAGOS_CAJA" parameterType="java.util.Map" resultType="java.util.HashMap">
		select count(id_compra_proveedor) as cantidad, SUM(valor_pagado) AS valorPagado, valor, pendiente, 
		C.id_establecimiento AS establecimiento from pago_proveedor PP
		inner join caja C ON id_caja = #{cajaFiltro} AND PP.fecha_pago like CONCAT(C.fecha_ejecucion,'%')
		inner join compra_proveedor CP ON CP.id_establecimiento = C.id_establecimiento AND (motivo IS null OR motivo = '')
		WHERE PP.id_compra = CP.id_compra_proveedor AND DATE(CP.fecha_compra) != DATE(PP.fecha_pago);
	
	</select>
	
	<select id="MATERIA_PRIMA_POR_VENCER_CAJA" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT datediff(MAX(fecha_vencimiento), MIN(NOW())) AS vence, lote, cantidad, I.nombre AS Ingrediente, UP.nombre AS medida
		FROM materia_prima MP
		INNER JOIN caja C ON C.id_caja = #{cajaFiltro} AND C.id_establecimiento = MP.id_establecimiento
		INNER JOIN ingrediente I ON I.id_ingrediente = MP.id_ingrediente
		INNER JOIN unidad_peso UP ON UP.id_unidad_peso = MP.id_unidad_peso
		WHERE TIMESTAMPDIFF(DAY,NOW(),fecha_vencimiento) &lt; 5;
	</select>
</mapper>