package com.practica.dao.coordinacion.model;

import java.util.ArrayList;
import java.util.List;

public class PracticaEstudianteExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table practica_estudiante
     *
     * @mbg.generated Mon Apr 02 22:22:08 COT 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table practica_estudiante
     *
     * @mbg.generated Mon Apr 02 22:22:08 COT 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table practica_estudiante
     *
     * @mbg.generated Mon Apr 02 22:22:08 COT 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table practica_estudiante
     *
     * @mbg.generated Mon Apr 02 22:22:08 COT 2018
     */
    public PracticaEstudianteExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table practica_estudiante
     *
     * @mbg.generated Mon Apr 02 22:22:08 COT 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table practica_estudiante
     *
     * @mbg.generated Mon Apr 02 22:22:08 COT 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table practica_estudiante
     *
     * @mbg.generated Mon Apr 02 22:22:08 COT 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table practica_estudiante
     *
     * @mbg.generated Mon Apr 02 22:22:08 COT 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table practica_estudiante
     *
     * @mbg.generated Mon Apr 02 22:22:08 COT 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table practica_estudiante
     *
     * @mbg.generated Mon Apr 02 22:22:08 COT 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table practica_estudiante
     *
     * @mbg.generated Mon Apr 02 22:22:08 COT 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table practica_estudiante
     *
     * @mbg.generated Mon Apr 02 22:22:08 COT 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table practica_estudiante
     *
     * @mbg.generated Mon Apr 02 22:22:08 COT 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table practica_estudiante
     *
     * @mbg.generated Mon Apr 02 22:22:08 COT 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table practica_estudiante
     *
     * @mbg.generated Mon Apr 02 22:22:08 COT 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andId_practicaIsNull() {
            addCriterion("id_practica is null");
            return (Criteria) this;
        }

        public Criteria andId_practicaIsNotNull() {
            addCriterion("id_practica is not null");
            return (Criteria) this;
        }

        public Criteria andId_practicaEqualTo(Integer value) {
            addCriterion("id_practica =", value, "id_practica");
            return (Criteria) this;
        }

        public Criteria andId_practicaNotEqualTo(Integer value) {
            addCriterion("id_practica <>", value, "id_practica");
            return (Criteria) this;
        }

        public Criteria andId_practicaGreaterThan(Integer value) {
            addCriterion("id_practica >", value, "id_practica");
            return (Criteria) this;
        }

        public Criteria andId_practicaGreaterThanOrEqualTo(Integer value) {
            addCriterion("id_practica >=", value, "id_practica");
            return (Criteria) this;
        }

        public Criteria andId_practicaLessThan(Integer value) {
            addCriterion("id_practica <", value, "id_practica");
            return (Criteria) this;
        }

        public Criteria andId_practicaLessThanOrEqualTo(Integer value) {
            addCriterion("id_practica <=", value, "id_practica");
            return (Criteria) this;
        }

        public Criteria andId_practicaIn(List<Integer> values) {
            addCriterion("id_practica in", values, "id_practica");
            return (Criteria) this;
        }

        public Criteria andId_practicaNotIn(List<Integer> values) {
            addCriterion("id_practica not in", values, "id_practica");
            return (Criteria) this;
        }

        public Criteria andId_practicaBetween(Integer value1, Integer value2) {
            addCriterion("id_practica between", value1, value2, "id_practica");
            return (Criteria) this;
        }

        public Criteria andId_practicaNotBetween(Integer value1, Integer value2) {
            addCriterion("id_practica not between", value1, value2, "id_practica");
            return (Criteria) this;
        }

        public Criteria andId_hoja_vidaIsNull() {
            addCriterion("id_hoja_vida is null");
            return (Criteria) this;
        }

        public Criteria andId_hoja_vidaIsNotNull() {
            addCriterion("id_hoja_vida is not null");
            return (Criteria) this;
        }

        public Criteria andId_hoja_vidaEqualTo(Integer value) {
            addCriterion("id_hoja_vida =", value, "id_hoja_vida");
            return (Criteria) this;
        }

        public Criteria andId_hoja_vidaNotEqualTo(Integer value) {
            addCriterion("id_hoja_vida <>", value, "id_hoja_vida");
            return (Criteria) this;
        }

        public Criteria andId_hoja_vidaGreaterThan(Integer value) {
            addCriterion("id_hoja_vida >", value, "id_hoja_vida");
            return (Criteria) this;
        }

        public Criteria andId_hoja_vidaGreaterThanOrEqualTo(Integer value) {
            addCriterion("id_hoja_vida >=", value, "id_hoja_vida");
            return (Criteria) this;
        }

        public Criteria andId_hoja_vidaLessThan(Integer value) {
            addCriterion("id_hoja_vida <", value, "id_hoja_vida");
            return (Criteria) this;
        }

        public Criteria andId_hoja_vidaLessThanOrEqualTo(Integer value) {
            addCriterion("id_hoja_vida <=", value, "id_hoja_vida");
            return (Criteria) this;
        }

        public Criteria andId_hoja_vidaIn(List<Integer> values) {
            addCriterion("id_hoja_vida in", values, "id_hoja_vida");
            return (Criteria) this;
        }

        public Criteria andId_hoja_vidaNotIn(List<Integer> values) {
            addCriterion("id_hoja_vida not in", values, "id_hoja_vida");
            return (Criteria) this;
        }

        public Criteria andId_hoja_vidaBetween(Integer value1, Integer value2) {
            addCriterion("id_hoja_vida between", value1, value2, "id_hoja_vida");
            return (Criteria) this;
        }

        public Criteria andId_hoja_vidaNotBetween(Integer value1, Integer value2) {
            addCriterion("id_hoja_vida not between", value1, value2, "id_hoja_vida");
            return (Criteria) this;
        }

        public Criteria andId_personaIsNull() {
            addCriterion("id_persona is null");
            return (Criteria) this;
        }

        public Criteria andId_personaIsNotNull() {
            addCriterion("id_persona is not null");
            return (Criteria) this;
        }

        public Criteria andId_personaEqualTo(Integer value) {
            addCriterion("id_persona =", value, "id_persona");
            return (Criteria) this;
        }

        public Criteria andId_personaNotEqualTo(Integer value) {
            addCriterion("id_persona <>", value, "id_persona");
            return (Criteria) this;
        }

        public Criteria andId_personaGreaterThan(Integer value) {
            addCriterion("id_persona >", value, "id_persona");
            return (Criteria) this;
        }

        public Criteria andId_personaGreaterThanOrEqualTo(Integer value) {
            addCriterion("id_persona >=", value, "id_persona");
            return (Criteria) this;
        }

        public Criteria andId_personaLessThan(Integer value) {
            addCriterion("id_persona <", value, "id_persona");
            return (Criteria) this;
        }

        public Criteria andId_personaLessThanOrEqualTo(Integer value) {
            addCriterion("id_persona <=", value, "id_persona");
            return (Criteria) this;
        }

        public Criteria andId_personaIn(List<Integer> values) {
            addCriterion("id_persona in", values, "id_persona");
            return (Criteria) this;
        }

        public Criteria andId_personaNotIn(List<Integer> values) {
            addCriterion("id_persona not in", values, "id_persona");
            return (Criteria) this;
        }

        public Criteria andId_personaBetween(Integer value1, Integer value2) {
            addCriterion("id_persona between", value1, value2, "id_persona");
            return (Criteria) this;
        }

        public Criteria andId_personaNotBetween(Integer value1, Integer value2) {
            addCriterion("id_persona not between", value1, value2, "id_persona");
            return (Criteria) this;
        }

        public Criteria andId_empresaIsNull() {
            addCriterion("id_empresa is null");
            return (Criteria) this;
        }

        public Criteria andId_empresaIsNotNull() {
            addCriterion("id_empresa is not null");
            return (Criteria) this;
        }

        public Criteria andId_empresaEqualTo(String value) {
            addCriterion("id_empresa =", value, "id_empresa");
            return (Criteria) this;
        }

        public Criteria andId_empresaNotEqualTo(String value) {
            addCriterion("id_empresa <>", value, "id_empresa");
            return (Criteria) this;
        }

        public Criteria andId_empresaGreaterThan(String value) {
            addCriterion("id_empresa >", value, "id_empresa");
            return (Criteria) this;
        }

        public Criteria andId_empresaGreaterThanOrEqualTo(String value) {
            addCriterion("id_empresa >=", value, "id_empresa");
            return (Criteria) this;
        }

        public Criteria andId_empresaLessThan(String value) {
            addCriterion("id_empresa <", value, "id_empresa");
            return (Criteria) this;
        }

        public Criteria andId_empresaLessThanOrEqualTo(String value) {
            addCriterion("id_empresa <=", value, "id_empresa");
            return (Criteria) this;
        }

        public Criteria andId_empresaLike(String value) {
            addCriterion("id_empresa like", value, "id_empresa");
            return (Criteria) this;
        }

        public Criteria andId_empresaNotLike(String value) {
            addCriterion("id_empresa not like", value, "id_empresa");
            return (Criteria) this;
        }

        public Criteria andId_empresaIn(List<String> values) {
            addCriterion("id_empresa in", values, "id_empresa");
            return (Criteria) this;
        }

        public Criteria andId_empresaNotIn(List<String> values) {
            addCriterion("id_empresa not in", values, "id_empresa");
            return (Criteria) this;
        }

        public Criteria andId_empresaBetween(String value1, String value2) {
            addCriterion("id_empresa between", value1, value2, "id_empresa");
            return (Criteria) this;
        }

        public Criteria andId_empresaNotBetween(String value1, String value2) {
            addCriterion("id_empresa not between", value1, value2, "id_empresa");
            return (Criteria) this;
        }

        public Criteria andId_docenteIsNull() {
            addCriterion("id_docente is null");
            return (Criteria) this;
        }

        public Criteria andId_docenteIsNotNull() {
            addCriterion("id_docente is not null");
            return (Criteria) this;
        }

        public Criteria andId_docenteEqualTo(Integer value) {
            addCriterion("id_docente =", value, "id_docente");
            return (Criteria) this;
        }

        public Criteria andId_docenteNotEqualTo(Integer value) {
            addCriterion("id_docente <>", value, "id_docente");
            return (Criteria) this;
        }

        public Criteria andId_docenteGreaterThan(Integer value) {
            addCriterion("id_docente >", value, "id_docente");
            return (Criteria) this;
        }

        public Criteria andId_docenteGreaterThanOrEqualTo(Integer value) {
            addCriterion("id_docente >=", value, "id_docente");
            return (Criteria) this;
        }

        public Criteria andId_docenteLessThan(Integer value) {
            addCriterion("id_docente <", value, "id_docente");
            return (Criteria) this;
        }

        public Criteria andId_docenteLessThanOrEqualTo(Integer value) {
            addCriterion("id_docente <=", value, "id_docente");
            return (Criteria) this;
        }

        public Criteria andId_docenteIn(List<Integer> values) {
            addCriterion("id_docente in", values, "id_docente");
            return (Criteria) this;
        }

        public Criteria andId_docenteNotIn(List<Integer> values) {
            addCriterion("id_docente not in", values, "id_docente");
            return (Criteria) this;
        }

        public Criteria andId_docenteBetween(Integer value1, Integer value2) {
            addCriterion("id_docente between", value1, value2, "id_docente");
            return (Criteria) this;
        }

        public Criteria andId_docenteNotBetween(Integer value1, Integer value2) {
            addCriterion("id_docente not between", value1, value2, "id_docente");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table practica_estudiante
     *
     * @mbg.generated do_not_delete_during_merge Mon Apr 02 22:22:08 COT 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table practica_estudiante
     *
     * @mbg.generated Mon Apr 02 22:22:08 COT 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}